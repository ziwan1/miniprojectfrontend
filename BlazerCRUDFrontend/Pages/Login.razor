@page "/login"
@inject HttpClient Http
@inject NavigationManager Navigation
@inject IJSRuntime jsRuntime

<link rel="stylesheet" href="css/styles.css">

<div id="background-scroll"></div>

<div class="login-container" id="login-container">
    <h1>Login</h1>
    <EditForm Model="@loginModel" OnValidSubmit="HandleLogin">
        <DataAnnotationsValidator />
        <label for="username">Username</label>
        <InputText id="username" @bind-Value="loginModel.Username" required />

        <label for="password">Password</label>
        <InputText id="password" @bind-Value="loginModel.Password" type="password" required />

        <button type="submit">Login</button>
        <p id="error-message" style="color: red;" hidden="@(loginFailed == false)">Login failed. Please try again.</p>
    </EditForm>
</div>

@code {
    private LoginModel loginModel = new LoginModel();
    private bool loginFailed = false;

    private async Task HandleLogin()
    {
        try
        {
            var response = await Http.PostAsJsonAsync("https://localhost:7059/api/Auth/Login", loginModel);
            if (response.IsSuccessStatusCode)
            {
                var tokenResponse = await response.Content.ReadFromJsonAsync<TokenResponse>();

                await jsRuntime.InvokeVoidAsync("localStorage.setItem", "jwtToken", tokenResponse?.Token);

                Navigation.NavigateTo("/dashboard");
            }
            else
            {
                loginFailed = true;
            }
        }
        catch (Exception)
        {
            loginFailed = true;
        }
    }

    public class LoginModel
    {
        public string? Username { get; set; }
        public string? Password { get; set; }
    }

    public class TokenResponse
    {
        public string? Token { get; set; }
    }
}
